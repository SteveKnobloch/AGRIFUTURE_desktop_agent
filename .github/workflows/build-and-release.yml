name: build-installers
on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./src/docker/buildfiles
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: production

  build-macos-installer:
    name: Build installer for MacOS
    runs-on: macos-12
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install deps
        run: npm install --global create-dmg

      - name: Build
        run: ./src/launcher/macos/build-macos.sh $GITHUB_REF_NAME

      - name: upload macos installer
        uses: actions/upload-artifact@v3
        with:
          name: installers
          path: ./.build/launcher/macos/AgrifutureDesktopAgent.dmg

  build-ubuntu-installer:
    name: Build installer for Ubuntu
    runs-on: ubuntu-18.04
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install deps
        run: DEBIAN_FRONTEND=noninteractive sudo apt-get install -y -o Dpkg::Options::="--force-confnew" --no-install-recommends debhelper fakeroot dpkg-dev

      - name: Build
        run: ./src/launcher/debian/build-debian.sh $GITHUB_REF_NAME

      - name: upload debian installer
        uses: actions/upload-artifact@v3
        with:
          name: installers
          path: ./.build/launcher/debian/AgrifutureDesktopAgent.deb

  build-windows-installer:
    name: Build installer for Windows
    runs-on: windows-2019
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install deps
        run: choco install nsis

      - name: Build
        working-directory: .\src\launcher\win\
        shell: powershell
        run: cmd /C .\build-win.bat $env:GITHUB_REF_NAME

      - name: upload windows installer
        uses: actions/upload-artifact@v3
        with:
          name: installers
          path: ./.build/launcher/win/AgrifutureDesktopAgent.exe

  upload-installers:
    runs-on: ubuntu-latest
    needs: [build-macos-installer, build-ubuntu-installer, build-windows-installer]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false   

      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: installers
          path: ./.build/installers/

      - name: Upload MacOS installer
        id: installer-macos 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./.build/installers/AgrifutureDesktopAgent.dmg
          asset_name: AgrifutureDesktopAgent.dmg
          asset_content_type: application/octet-stream

      - name: Upload Ubuntu installer
        id: installer-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./.build/installers/AgrifutureDesktopAgent.deb
          asset_name: AgrifutureDesktopAgent.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload windows installer
        id: installer-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./.build/installers/AgrifutureDesktopAgent.exe
          asset_name: AgrifutureDesktopAgent.exe
          asset_content_type: application/vnd.microsoft.portable-executable
